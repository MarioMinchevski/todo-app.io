@use '../abstracts/mixins' as *;
@use '../abstracts/variables' as *;

.header {
    min-width: 540px;
    display: flex;
    justify-content: space-between;
    margin-bottom: 3rem;

    h1 {
        align-self: flex-start;
    }

    img {
        align-self: center;
    }
}

.app-container {
    min-width: 540px;
    display: flex;
    flex-direction: column;
    align-items: center;

    .input-group {
        width: 100%;
        display: flex;
        align-items: center;
        position: relative;
        margin-bottom: 1.5rem;

        input {
            width: 100%;
            line-height: 5px;
            background-color: $color-base-secondary;
            color: $color-neutral-line-dark;
            font-size: $font-size-base;

            padding: 1.375rem 4.5rem 1.275rem;
            border-radius: 5px;

            border: none;
            outline: none;
            box-shadow: 0px 35px 50px -15px rgba(194, 195, 214, 0.5);

            &::placeholder {
                color: $color-neutral-secondary;
            }
        }

        .circle-icon {
            position: absolute;
            left: 1.5rem;
            top: 50%;
            transform: translateY(-50%);
            height: 24px;
            width: 24px;
            border-radius: 100ch;
            border: 1px solid $color-neutral-line-light;
        }
    }

    .to-dos-container {
        width: 100%;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        box-shadow: 0px 35px 50px -15px rgba(194, 195, 214, 0.5);
        overflow: hidden;
        z-index: 2;
        background-color: white;

        li {
            width: 100%;
            background-color: $color-base-secondary;
            color: $color-neutral-line-dark;
            font-size: $font-size-base;

            display: flex;
            align-items: center;
            justify-content: space-between;

            padding: 1.145rem 1.5rem;
            border-bottom: 1px solid $color-neutral-line-light;

            &.completed {
                text-decoration: line-through;
                color: $color-neutral-primary;
            }

            input {
                appearance: none;
                border: 1px solid $color-neutral-line-light;
                height: 24px;
                width: 24px;
                border-radius: 50%;
                margin-right: 10px;
                cursor: pointer;
                vertical-align: middle;
            }

            input:checked {
                background: url('../images/icon-check.svg'), linear-gradient(to right, hsl(192, 100%, 67%), hsl(280, 87%, 65%));
                background-repeat: no-repeat;
                background-position: center;
                border: none;
            }

            .remove-icon {
                cursor: pointer;
                transition: all 200ms ease-in-out;
                visibility: hidden;
                opacity: 0;
            }

            &:hover {
                .remove-icon {
                    visibility: visible;
                    opacity: 1;
                }
            }
        }
    }

    .to-dos-footer {
        width: 100%;
        background-color: $color-base-secondary;
        color: $color-neutral-secondary;
        font-size: $font-size-medium;
        z-index: 3;


        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1.35rem 1.5rem;

        border-radius: 5px;
        box-shadow: 0px 35px 50px -15px rgba(194, 195, 214, 0.5);

        .filters-wrapper {
            font-weight: $font-weight-bold;
            display: flex;
            gap: 1.125rem;

            input {
                appearance: none;
            }

            input:checked+span {
                color: $color-primary;
            }

            span {
                cursor: pointer;
                transition: all 200ms ease-in-out;

                &:hover {
                    color: $color-base;
                }
            }

            .all-items,
            .active-items,
            .completed-items {
                &.active {
                    color: $color-primary;
                }
            }
        }

        .remove-items-wrapper {
            cursor: pointer;
            transition: all 300ms ease-in-out;

            &:hover {
                color: $color-base;
            }
        }
    }

    &.dark {
        .input-group {
            input {
                background-color: $color-base-tertiary;
                color: $color-neutral-tertiary;
                box-shadow: 0px 35px 50px -15px rgba(0, 0, 0, 0.5);

                &::placeholder {
                    color: $color-neutral-quinary;
                }
            }
        }

        .to-dos-container {
            box-shadow: 0px 35px 50px -15px rgba(0, 0, 0, 0.5);
            overflow: hidden;

            li {
                background-color: $color-base-tertiary;
                color: $color-neutral-tertiary;
                border-bottom: 1px solid $color-neutral-line-dark;

                &.completed {
                    text-decoration: line-through;
                    color: $color-neutral-quaternary;
                }
            }
        }

        .to-dos-footer {

            background-color: $color-base-tertiary;
            color: $color-neutral-senary;

            box-shadow: 0px 35px 50px -15px rgba(0, 0, 0, 0.5);

            .filters-wrapper {

                span {
                    cursor: pointer;
                    transition: all 200ms ease-in-out;

                    &:hover {
                        color: $color-base-secondary;
                    }
                }
            }

            .remove-items-wrapper {
                cursor: pointer;
                transition: all 300ms ease-in-out;

                &:hover {
                    color: $color-base-secondary;
                }
            }
        }
    }
}

li.dragging {
    opacity: 0.2;
    /* Adjust the opacity value as needed */
    transition: opacity 0.3s ease-in-out;
    /* Optional: Add a smooth transition effect */
}